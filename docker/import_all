#!/bin/bash 

## INTERNAL SCRIPT FOR USE INSIDE OF DOCKER CONTAINER

CMD=`basename $0`
scriptdir=`dirname $0`

if [ $# -ne 3 ]; then
	echo "
USAGE: sh $CMD <APPDIR_IN_DOCKER> <APPDIR_ON_DISK> <RELEASE_TAG>

Imports lexicon data for Swedish, Norwegian, US English, and a small set of test data for Arabic.
" >&2
	exit 1
fi
APPDIR=$1
LOCALDIR=$2
RELEASETAG=$3

if [ $RELEASETAG == "latest" ]; then
    RELEASETAG="master"
fi

echo "[$CMD] APPDIR=$APPDIR" >&2
echo "[$CMD] LOCALDIR=$LOCALDIR" >&2
echo "[$CMD] RELEASETAG=$RELEASETAG" >&2

function do_setup {
    if $scriptdir/setup $APPDIR; then
	echo "[$CMD] Setup completed" >&2
    else
	echo "[$CMD] Couldn't run setup" >&2
	exit 1
    fi
}



### LEXDATA SETUP
do_setup

### LEXDATA PATHS

SVLEX=sv_se_nst_lex.db
NOBLEX=no_nob_nst_lex.db
AMELEX=en_am_cmu_lex.db
ARLEX=ar_ar_tst_lex.db
if [ -e $APPDIR/db_files/$SVLEX ]; then
    echo "[$CMD] cannot create db if it already exists: $LOCALDIR/db_files/$SVLEX" >&2
    exit 1
fi
if [ -e $APPDIR/db_files/$NOBLEX ]; then
    echo "[$CMD] cannot create db if it already exists: $LOCALDIR/db_files/$NOBLEX" >&2
    exit 1
fi
if [ -e $APPDIR/db_files/$AMELEX ]; then
    echo "[$CMD] cannot create db if it already exists: $LOCALDIR/db_files/$AMELEX" >&2
    exit 1
fi
if [ -e $APPDIR/db_files/$ARLEX ]; then
    echo "[$CMD] cannot create db if it already exists: $LOCALDIR/db_files/$ARLEX" >&2
    exit 1
fi


nConverters=`ls $APPDIR/lexdata/converters/*.cnv 2> /dev/null |wc -l`
nSymSets=`ls $APPDIR/lexdata/*/*/*.sym 2> /dev/null |wc -l`
if [ -d "$APPDIR/lexdata" ] && [ $nSymSets != 0 ] || [ $nConverters != 0 ]; then
    cd $APPDIR/lexdata && git pull && git checkout $RELEASETAG && cd -
    KEEP=1
else
    if git clone https://github.com/stts-se/lexdata.git --branch $RELEASETAG --single-branch $APPDIR/lexdata.git; then
	echo -n "" # OK
    else
	echo "[$CMD] git clone failed" >&2
	exit 1
    fi
fi

mkdir -p $APPDIR/db_files || exit 1
mkdir -p $APPDIR/symbol_sets || exit 1

cp $APPDIR/lexdata.git/*/*/*.sym $APPDIR/symbol_sets/ || exit 1
echo "" >> $APPDIR/symbol_sets/mappers.txt || exit 1
cat $APPDIR/lexdata.git/mappers.txt >> $APPDIR/symbol_sets/mappers.txt || exit 1
cp $APPDIR/lexdata.git/converters/*.cnv $APPDIR/symbol_sets/ || exit 1


### LEXDATA IMPORT

echo "" >&2
echo "IMPORT: $SVLEX" >&2
    if importSql $APPDIR/lexdata.git/sv-se/nst/swe030224NST.pron-ws.utf8.sql.gz $APPDIR/db_files/$SVLEX ; then
	echo -n ""
    else
	echo "$SVLEX FAILED" >&2
	exit 1
    fi

echo "" >&2
echo "IMPORT: $NOBLEX" >&2
    if importSql $APPDIR/lexdata.git/nb-no/nst/nor030224NST.pron-ws.utf8.sql.gz $APPDIR/db_files/$NOBLEX ; then
	echo -n ""
    else
	echo "$NOBLEX FAILED" >&2
	exit 1
    fi

echo "" >&2
echo "IMPORT: $AMELEX" >&2
    if importSql $APPDIR/lexdata.git/en-us/cmudict/cmudict-0.7b-ws.utf8.sql.gz $APPDIR/db_files/$AMELEX ; then
	echo -n ""
    else
	echo "$AMELEX FAILED" >&2
	exit 1
    fi

echo "" >&2
echo "IMPORT: $ARLEX" >&2
    if importSql $APPDIR/lexdata.git/ar/TEST/ar_TEST.pron-ws.utf8.sql.gz $APPDIR/db_files/$ARLEX ; then
	echo -n ""
    else
	echo "$ARLEX FAILED" >&2
	exit 1
    fi

echo "[$CMD] Clearing lexdata cache" >&2
rm -fr $APPDIR/lexdata.git

echo "[$CMD] Done. BYE!" >&2



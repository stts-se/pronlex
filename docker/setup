#!/bin/bash 

## INTERNAL SCRIPT FOR USE INSIDE OF DOCKER CONTAINER

CMD=`basename $0`
export GOPATH=`go env GOPATH`
export PATH=$PATH:$GOPATH/bin

if [ $# -ne 1 ]; then
	echo "
USAGE: sh $CMD <APPDIR>

Setup files will be added to the destination folder <APPDIR> and imports a small set of lexicon data needed for the Wikispeech startup tests.
" >&2
	exit 1
fi
DOCKERDIR=$1


#echo "[$CMD] DOCKERDIR=$DOCKERDIR" >&2

function initial_setup {
    if [ -d $DOCKERDIR/symbol_sets ] ; then
	echo "[$CMD] Docker folder $DOCKERDIR is already configured. No setup needed." >&2
	exit 0
    fi


    if [ -z "$GOPATH" ] ; then
	echo "[$CMD] The GOPATH environment variable is required!" >&2
	exit 1
    fi

    ### LEXDATA PREPS

    echo "[$CMD] Setting up basic files in docker folder $DOCKERDIR... " >&2

    mkdir -p $DOCKERDIR || exit 1
    mkdir -p $DOCKERDIR/symbol_sets || exit 1
    mkdir -p $DOCKERDIR/db_files || exit 1

    cp $GOPATH/src/github.com/stts-se/pronlex/lexserver/demo_files/*.sym $DOCKERDIR/symbol_sets/ || exit 1
    cp $GOPATH/src/github.com/stts-se/pronlex/lexserver/demo_files/*.cnv $DOCKERDIR/symbol_sets/ || exit 1
    echo "" >> $DOCKERDIR/symbol_sets/mappers.txt || exit 1
    cat $GOPATH/src/github.com/stts-se/pronlex/lexserver/demo_files/mappers.txt >> $DOCKERDIR/symbol_sets/mappers.txt || exit 1


    ### COMPLETED

    echo "[$CMD] COMPLETED" >&2
}



### LEXDATA SETUP
initial_setup

### LEXDATA PATHS

LEXDB=wikispeech_testdb.db
if [ -e $DOCKERDIR/db_files/$LEXDB ]; then
    echo "[$CMD] cannot create db if it already exists in docker folder $DOCKERDIR/db_files/$LEXDB" >&2
    exit 1
fi

if createEmptyDB $DOCKERDIR/db_files/$LEXDB ; then
    echo "[$CMD] created empty db in docker: $DOCKERDIR/db_files/$LEXDB" >&2
else
    echo "[$CMD] couldn't create empty db in docker: $DOCKERDIR/db_files/$LEXDB" >&2
    exit 1
fi


nConverters=`ls $DOCKERDIR/lexdata/converters/*.cnv 2> /dev/null |wc -l`
nSymSets=`ls $DOCKERDIR/lexdata/*/*/*.sym 2> /dev/null |wc -l`
if [ -d "$DOCKERDIR/lexdata" ] && [ $nSymSets != 0 ] || [ $nConverters != 0 ]; then
    cd $DOCKERDIR/lexdata && git pull && cd -
    KEEP=1
else
    if git clone https://github.com/stts-se/lexdata.git $DOCKERDIR/lexdata.git; then
	echo -n "" # OK
    else
	echo "[$CMD] git clone failed" >&2
	exit 1
    fi
fi

mkdir -p $DOCKERDIR/db_files || exit 1
mkdir -p $DOCKERDIR/symbol_sets || exit 1

cp $DOCKERDIR/lexdata.git/*/*/*.sym $DOCKERDIR/symbol_sets/ || exit 1
echo "" >> $DOCKERDIR/symbol_sets/mappers.txt || exit 1
cat $DOCKERDIR/lexdata.git/mappers.txt >> $DOCKERDIR/symbol_sets/mappers.txt || exit 1
cp $DOCKERDIR/lexdata.git/converters/*.cnv $DOCKERDIR/symbol_sets/ || exit 1


### LEXDATA IMPORT

echo "" >&2
echo "IMPORT: $LEXDB:sv" >&2

if zcat $DOCKERDIR/lexdata.git/sv-se/nst/swe030224NST.pron-ws.utf8.gz | egrep -wi "apa|hund|färöarna|det|här|är|ett|test" > $DOCKERDIR/lexdata.git/sv-se/nst/swe030224NST.pron-ws.utf8.for_testing && importLex $DOCKERDIR/db_files/$LEXDB sv $DOCKERDIR/lexdata.git/sv-se/nst/swe030224NST.pron-ws.utf8.for_testing sv-se_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:sv FAILED" >&2
    exit 1
fi

echo "" >&2
echo "IMPORT: $LEXDB:nb" >&2
if zcat $DOCKERDIR/lexdata.git/nb-no/nst/nor030224NST.pron-ws.utf8.gz | egrep -wi "apa|hund|det|ær|test|banebrytende" > $DOCKERDIR/lexdata.git/nb-no/nst/nor030224NST.pron-ws.utf8.for_testing && importLex $DOCKERDIR/db_files/$LEXDB nb $DOCKERDIR/lexdata.git/nb-no/nst/nor030224NST.pron-ws.utf8.for_testing nb-no_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:nb FAILED" >&2
    exit 1
fi

echo "" >&2
echo "IMPORT: $LEXDB:enu" >&2
if cat $DOCKERDIR/lexdata.git/en-us/cmudict/cmudict-0.7b-ws.utf8 | egrep -wi "test|a|children" > $DOCKERDIR/lexdata.git/en-us/cmudict/cmudict-0.7b-ws.utf8.for_testing && importLex $DOCKERDIR/db_files/$LEXDB enu $DOCKERDIR/lexdata.git/en-us/cmudict/cmudict-0.7b-ws.utf8.for_testing en-us_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:enu FAILED" >&2
    exit 1
    fi

echo "" >&2
echo "IMPORT: $LEXDB:ar" >&2
if importLex $DOCKERDIR/db_files/$LEXDB ar $DOCKERDIR/lexdata.git/ar/TEST/ar_TEST.pron-ws.utf8 ar_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:ar FAILED" >&2
    exit 1
fi

echo "[$CMD] Clearing lexdata cache" >&2
rm -fr $DOCKERDIR/lexdata.git

echo "[$CMD] Done. BYE!" >&2



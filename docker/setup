#!/bin/bash 

## INTERNAL SCRIPT FOR USE INSIDE OF DOCKER CONTAINER

set -e

echo -n "whoami " && whoami

CMD=`basename $0`
export GOPATH=`go env GOPATH`
export PATH=$PATH:$GOPATH/bin

if [ $# -ne 1 ]; then
	echo "
USAGE: sh $CMD <APPDIR>

Setup files will be added to the destination folder <APPDIR> and imports a small set of lexicon data needed for the Wikispeech startup tests.
" >&2
	exit 1
fi

DOCKERDIR=$1
DEMOFILES=$GOPATH/src/github.com/stts-se/pronlex/lexserver/demo_files

LEXDB=wikispeech_testdb.db

#echo "[$CMD] DOCKERDIR=$DOCKERDIR" >&2

function initial_setup {
    if [ -f $DOCKERDIR/db_files/wikispeech_testdb.db ] ; then
	echo "[$CMD] Docker folder $DOCKERDIR is already configured. No setup needed." >&2
	exit 0
    fi
    if [ -f $DOCKERDIR/db_files/lexserver_testdb.db ] ; then
	echo "[$CMD] Docker folder $DOCKERDIR is already configured. No setup needed." >&2
	exit 0
    fi


    if [ -z "$GOPATH" ] ; then
	echo "[$CMD] The GOPATH environment variable is required!" >&2
	exit 1
    fi

    ### LEXDATA PREPS

    echo "[$CMD] Setting up basic files in docker folder $DOCKERDIR... " >&2

    mkdir -p $DOCKERDIR
    mkdir -p $DOCKERDIR/symbol_sets || echo "mkdir -p $DOCKERDIR/symbol_sets | OK"
    mkdir -p $DOCKERDIR/db_files || echo "mkdir -p $DOCKERDIR/db_files | OK"

    cp $DEMOFILES/*.sym $DOCKERDIR/symbol_sets/ || echo "cp $DEMOFILES/*.sym $DOCKERDIR/symbol_sets/ | OK"
    cp $DEMOFILES/*.cnv $DOCKERDIR/symbol_sets/ || echo "cp $DEMOFILES/*.cnv $DOCKERDIR/symbol_sets/ | OK"
    cp $DEMOFILES/mappers.txt $DOCKERDIR/symbol_sets/ | echo "cp $DEMOFILES/mappers.txt $DOCKERDIR/symbol_sets/ | OK"
}



### LEXDATA SETUP
initial_setup

### LEXDATA PATHS

if [ -e $DOCKERDIR/db_files/$LEXDB ]; then
    echo "[$CMD] cannot create db if it already exists in docker folder $DOCKERDIR/db_files/$LEXDB" >&2
    exit 1
fi

if createEmptyDB $DOCKERDIR/db_files/$LEXDB ; then
    echo "[$CMD] Created empty db in docker: $DOCKERDIR/db_files/$LEXDB" >&2
else
    echo "[$CMD] couldn't create empty db in docker: $DOCKERDIR/db_files/$LEXDB" >&2
    exit 1
fi


### LEXDATA IMPORT

echo "" >&2
echo "IMPORT: $LEXDB:sv" >&2

if importLex $DOCKERDIR/db_files/$LEXDB sv sv_SE $DEMOFILES/swe030224NST.pron-ws.utf8.for_testing sv-se_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:sv FAILED" >&2
    exit 1
fi

echo "" >&2
echo "IMPORT: $LEXDB:nb" >&2
if importLex $DOCKERDIR/db_files/$LEXDB nb nb_NO $DEMOFILES/nor030224NST.pron-ws.utf8.for_testing nb-no_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:nb FAILED" >&2
    exit 1
fi

echo "" >&2
echo "IMPORT: $LEXDB:enu" >&2
if importLex $DOCKERDIR/db_files/$LEXDB enu en_US $DEMOFILES/cmudict-0.7b-ws.utf8.for_testing en-us_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:enu FAILED" >&2
    exit 1
    fi

echo "" >&2
echo "IMPORT: $LEXDB:ar" >&2
if importLex $DOCKERDIR/db_files/$LEXDB ar ar_AR $DEMOFILES/ar_TEST.pron-ws.utf8.for_testing ar_ws-sampa $DOCKERDIR/symbol_sets ; then
    echo -n ""
else
    echo "$LEXDB:ar FAILED" >&2
    exit 1
fi

echo "[$CMD] Clearing lexdata cache" >&2
rm -fr $DOCKERDIR/lexdata.git

echo "[$CMD] Done. BYE!" >&2



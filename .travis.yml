language: go

dist: bionic

go:
  - 1.13.x

notifications:
  email:
    on_success: change
    on_failure: change

env:
 - RELEASE=master SLEEP=60
 - RELEASE=master SLEEP=60 DO_IMPORT=1

#addons:
#  mariadb: '10.1'

#services: mysql

script:
 - set -e
 - sudo apt-get install mariadb-client mariadb-server
 # - sudo apt-get install software-properties-common dirmngr gnupg-curl
 # - sudo apt-key adv --fetch-keys 'https://mariadb.org/mariadb_release_signing_key.asc'
 # - sudo add-apt-repository 'deb [arch=amd64] http://ftp.nluug.nl/db/mariadb/repo/10.4/debian buster main'
 # - sudo apt update
 # - sudo apt upgrade
 # - lsb_release -a
 # - sudo apt list libssl*
 # - wget http://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u12_armhf.deb
 # - dpkg -i libssl1.0.0_1.0.1t-1+deb8u12_armhf.deb
 # - sudo apt install mariadb-client-10.4 mariadb-server-10.4 mariadb-client-core-10.4 libc6 galera-4 mariadb-server-core-10.4 
 - cat go.mod
 - sudo mysql -u root < scripts/mariadb_setup.sql
 - go test -v ./... 
 - go get github.com/securego/gosec/cmd/gosec
 - gosec ./...
 - go get honnef.co/go/tools/cmd/staticcheck
 - staticcheck ./...

 - bash scripts/setup.sh /tmp/appdir/sqlite

 - | 
   if [ -v DO_IMPORT ]; then
     bash scripts/import.sh lexdata /tmp/appdir/sqlite $RELEASE
   fi

 - bash scripts/start_server.sh -a /tmp/appdir/sqlite -e sqlite &
 - export pid=$!
 - echo "pronlex sqlite server started on pid $pid. wait for $SLEEP seconds before shutting down"
 - sleep $SLEEP
 - sh .travis/exit_server_and_fail_if_not_running.sh pronlex $pid
 
 - bash scripts/setup.sh -a /tmp/appdir/mariadb -e mariadb -l 'speechoid:@tcp(127.0.0.1:3306)'

 - | 
   if [ -v DO_IMPORT ]; then
     bash scripts/import.sh lexdata /tmp/appdir/mariadb $RELEASE
   fi

 - bash scripts/start_server.sh -a /tmp/appdir/mariadb -e mariadb -l 'speechoid:@tcp(127.0.0.1:3306)'
 - export pid=$!
 - echo "pronlex mariadb server started on pid $pid. wait for $SLEEP seconds before shutting down"
 - sleep $SLEEP
 - sh .travis/exit_server_and_fail_if_not_running.sh pronlex $pid
 
